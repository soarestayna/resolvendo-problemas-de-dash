table Medidas
	lineageTag: 7de81a9c-1c1f-463f-b1fd-c70f03119cda

	measure TotalEntregas = COUNTROWS(Logistica)
		formatString: 0
		lineageTag: 77d38c89-b484-427a-81cd-699804f0f582

	measure Raking =
			
			VAR __MAX_NUMBER_OF_STARS = 5
			VAR __MIN_RATED_VALUE = 1200
			VAR __MAX_RATED_VALUE = 2200
			VAR __BASE_VALUE = [TotalEntregas]
			VAR __NORMALIZED_BASE_VALUE =
				MIN(
					MAX(
						DIVIDE(
							__BASE_VALUE - __MIN_RATED_VALUE,
							__MAX_RATED_VALUE - __MIN_RATED_VALUE
						),
						0
					),
					1
				)
			VAR __STAR_RATING = ROUND(__NORMALIZED_BASE_VALUE * __MAX_NUMBER_OF_STARS, 0)
			RETURN
				IF(
					NOT ISBLANK(__BASE_VALUE),
					REPT(UNICHAR(9733), __STAR_RATING)
						& REPT(UNICHAR(9734), __MAX_NUMBER_OF_STARS - __STAR_RATING)
				)
		lineageTag: 319276b4-2ed3-468d-8234-c255346212c2

		extendedProperty MeasureTemplate =
				{
				  "version": 0,
				  "daxTemplateName": "StarRating"
				}

		changedProperty = FormatString

		annotation PBI_FormatHint = {"isText":true}

	measure TotalEntregasPrazo = CALCULATE([TotalEntregas],FILTER(Logistica, Logistica[Status_Entrega] = "Antecipado" || Logistica[Status_Entrega] = "No Prazo"))
		formatString: 0
		lineageTag: d87974f4-5b7a-4f84-8c08-3098010c62ed

	partition Medidas = m
		mode: import
		source =
				let
				    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#"Coluna 1" = _t]),
				    #"Tipo Alterado" = Table.TransformColumnTypes(Fonte,{{"Coluna 1", type text}}),
				    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado",{"Coluna 1"})
				in
				    #"Colunas Removidas"

	annotation PBI_ResultType = Table

